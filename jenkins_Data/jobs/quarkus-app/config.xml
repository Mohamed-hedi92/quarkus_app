<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2198.v41dd8ef6dd56"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2198.v41dd8ef6dd56">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.38.0">
      <projectUrl>https://github.com/Mohamed-hedi92/quarkus_app/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.38.0">
          <spec></spec>
        </com.cloudbees.jenkins.GitHubPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3894.vd0f0248b_a_fc4">
    <script>pipeline {


  agent any
  tools {
      maven &apos;maven&apos;
    
  }
    stages {
        stage(&apos;Checkout&apos;) {
            steps {
                git branch: &apos;main&apos;, url: &apos;https://github.com/Mohamed-hedi92/quarkus_app.git&apos;
              
            }
        }



        stage (&apos;build&apos;) {
         
             steps {
                 sh &apos;docker ps&apos;
                  // Build your Quarkus application
                 
                  sh &apos;./mvnw clean install -DskipTests&apos;
            }
        }


        stage(&apos;Build Docker Image&apos;) {
            
            steps {
                script {
                    docker.build(&apos;-f src/main/docker/Dockerfile.jvm &apos;, &apos;-t quarkus/quarkus-app-jvm .&apos;)
                }
            }
        }
        
        stage(&apos;Push Docker Image&apos;) {
            steps {
                script {
                    docker.withRegistry(&apos;https://your-docker-registry.com&apos;, &apos;docker-registry-credentials-id&apos;) {
                        docker.image(&apos;your-docker-image:latest&apos;).push(&apos;latest&apos;)
                    }
                }
            }
        }
    }
    
    
    post {
        always {
            cleanWs()
        }
    }
    
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>